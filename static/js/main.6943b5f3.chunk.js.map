{"version":3,"sources":["HomePage/IconHome.js","gameXucXac/components/InfoGame.js","gameXucXac/components/XucXac.js","gameXucXac/components/index.js","gameXucXac/modules/actions.js","gameXucXac/modules/constant.js","gameOanTuTi/components/Computer.js","gameOanTuTi/components/Player.js","gameOanTuTi/modules/constant.js","gameOanTuTi/modules/actions.js","gameOanTuTi/components/ResultGame.js","gameOanTuTi/components/index.js","HomePage/index.js","App.js","serviceWorker.js","gameXucXac/modules/xucXacReducer.js","gameOanTuTi/modules/oanTuTiReducer.js","redux/index.js","index.js"],"names":["IconHome","to","className","style","position","bottom","right","fontSize","color","padding","lineHeight","Component","InfoGame","this","props","countGame","countWin","clientChoose","connect","state","xucXacReducer","XucXac","renderDice","dice","map","item","index","linkImg","src","alt","key","resultGame","Home","handleChoose","handlePlayGame","onClick","dispatch","choose","type","payload","actChooseGame","count","randomXucXac","setInterval","clearInterval","Computer","computerChoose","img","oanTuTiReducer","Player","renderChoose","chooseArr","handleChooseItem","border","datCuoc","ma","find","playerChoose","actChooseItem","ResultGame","resultText","randomInterval","GameOanTuTi","HomePage","App","exact","path","component","GameXucXac","Boolean","window","location","hostname","match","initialState","actions","Math","ceil","random","result","reduce","sum","gameResult","chooseArrUpdate","randomNumber","floor","randomChoose","player","rpsData","rock","scissors","paper","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6943b5f3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class IconHome extends Component {\r\n  render() {\r\n    return (\r\n        \r\n      <Link to=\"/\" >\r\n        <div>\r\n          <i\r\n            className=\"fa fa-home\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\",\r\n              right: \"20px\",\r\n              fontSize: \"40px\",\r\n              color: \"rgb(255 111 0)\",\r\n              padding: \"10px\",\r\n              lineHeight: \"40px\",\r\n            }}\r\n          />\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass InfoGame extends Component {\r\n  render() {\r\n    const { countGame, countWin, clientChoose } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\" infoText\">\r\n          BẠN CHỌN:{\" \"}\r\n          <span className=\"text-danger\">{clientChoose ? \"tài\" : \"xỉu\"}</span>\r\n        </div>\r\n        <div className=\"infoText\">\r\n          BÀN THẮNG: <span className=\"text-success\">{countWin}</span>\r\n        </div>\r\n        <div className=\" infoText\">\r\n          TỔNG SỐ BÀN CHƠI: <span className=\"text-primary\">{countGame}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countWin: state.xucXacReducer.countWin,\r\n    countGame: state.xucXacReducer.countGame,\r\n    clientChoose: state.xucXacReducer.clientChoose,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(InfoGame);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass XucXac extends Component {\r\n  renderDice = () => {\r\n    const { dice } = this.props;\r\n    return dice.map((item, index) => {\r\n      let linkImg = \"./img/\" + item + \".png\";\r\n      return <img src={linkImg} className=\"xucXac\" alt={item} key={index} />;\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        {this.renderDice()}\r\n        <h3 style={{ fontSize: \"20px\" }}>\r\n          Kết quả:\r\n          <span className=\"text-secondary\" >\r\n            {\" \"}\r\n            {this.props.resultGame ? \"tài\" : \"xỉu\"}{\" \"}\r\n          </span>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dice: state.xucXacReducer.dice,\r\n    resultGame: state.xucXacReducer.resultGame,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(XucXac);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport IconHome from \"../../HomePage/IconHome\";\r\nimport {\r\n  actChooseGame,\r\n  actPlayGame,\r\n  actRandomXucXac,\r\n} from \"../modules/actions\";\r\nimport \"./index.css\";\r\nimport InfoGame from \"./InfoGame\";\r\nimport XucXac from \"./XucXac\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { handleChoose, handlePlayGame } = this.props;\r\n    return (\r\n      <div className=\"game_XucXac\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"title__XucXac text-center mt-5 display-4 \">\r\n            GAME ĐỔ XÚC XẮC\r\n          </div>\r\n          <div className=\"row text-center\">\r\n            <div className=\"col-4\">\r\n              <button\r\n                className=\"btnGame\"\r\n                onClick={() => {\r\n                  handleChoose(true);\r\n                }}\r\n              >\r\n                TÀI\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <XucXac />\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button\r\n                className=\"btnGame\"\r\n                onClick={() => {\r\n                  handleChoose(false);\r\n                }}\r\n              >\r\n                XỈU\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center \">\r\n            <InfoGame />\r\n\r\n            <button\r\n              className=\"btn btn-success mt-3 p-2\"\r\n              onClick={() => {\r\n                handlePlayGame();\r\n              }}\r\n            >\r\n              Play game\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <IconHome />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n  return {\r\n    handleChoose: (choose) => {\r\n      dispatch(actChooseGame(choose));\r\n    },\r\n    handlePlayGame: () => {\r\n      let count = 0;\r\n      let randomXucXac = setInterval(() => {\r\n        dispatch(actRandomXucXac());\r\n        count++;\r\n        if (count > 20) {\r\n          clearInterval(randomXucXac);\r\n          dispatch(actPlayGame());\r\n        }\r\n      }, 100);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProp)(Home);\r\n","import { CHOOSE_GAME, PLAY_GAME, RANDOM_XUC_XAC } from \"./constant\";\r\n\r\nexport const actChooseGame = (choose) => {\r\n  return {\r\n    type: CHOOSE_GAME,\r\n    payload: choose,\r\n  };\r\n};\r\n\r\nexport const actPlayGame = () => {\r\n  return {\r\n    type: PLAY_GAME,\r\n  };\r\n};\r\n\r\nexport const actRandomXucXac = () => {\r\n  return {\r\n    type: RANDOM_XUC_XAC,\r\n  };\r\n};\r\n","export const CHOOSE_GAME = \"CHOOSE_GAME\";\r\nexport const PLAY_GAME = \"PLAY_GAME\";\r\nexport const RANDOM_XUC_XAC = \"RANDOM_XUC_XAC\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Computer extends Component {\r\n  render() {\r\n    const { computerChoose } = this.props;\r\n    return (\r\n      <div className=\"col-4\">\r\n        <div className=\"playerGame\">\r\n          <div className=\"theThink\">\r\n            <img\r\n              src={computerChoose.img}\r\n              alt={computerChoose.img}\r\n              className=\"img-fluid iconThink\"\r\n            />\r\n          </div>\r\n          <div className=\"speech-bubble\"></div>\r\n          <img src=\"./img/thanos.png\" alt=\"thanos\" className=\"img-fluid icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    computerChoose: state.oanTuTiReducer.computerChoose,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Computer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actChooseItem } from \"../modules/constant\";\r\n\r\nclass Player extends Component {\r\n  renderChoose = () => {\r\n    const { chooseArr, handleChooseItem } = this.props;\r\n    return chooseArr.map((item, index) => {\r\n      let border = {};\r\n      if (item.datCuoc) {\r\n        border = { border: \"3px solid orange\" };\r\n      }\r\n      return (\r\n        <div className=\"col-4\" key={index}>\r\n          <button\r\n            className=\"btnItem\"\r\n            style={border}\r\n            onClick={() => {\r\n              handleChooseItem(item.ma);\r\n            }}\r\n          >\r\n            <img src={item.img} alt={item.img} className=\"img-fluid iconChoose\" />\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { chooseArr } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-4\">\r\n        <div className=\"playerGame\">\r\n          <div className=\"theThink\">\r\n            <img\r\n              src={chooseArr.find((item) => {\r\n                return item.datCuoc === true;\r\n              }).img}\r\n              alt=\"./img/rock.png\"\r\n              className=\"img-fluid iconThink\"\r\n            />\r\n          </div>\r\n          <div className=\"speech-bubble\"></div>\r\n          <img src=\"./img/ironman.png\" alt=\"ironman\" className=\"img-fluid icon\" />\r\n          <div className=\"row\">{this.renderChoose()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    chooseArr: state.oanTuTiReducer.chooseArr,\r\n    playerChoose: state.oanTuTiReducer.playerChoose,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleChooseItem: (choose) => {\r\n      dispatch(actChooseItem(choose));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import { CHOOSE_ITEM, END_GAME, RANDOM_ITEM } from \"./actions\";\r\n\r\nexport const actChooseItem = (choose) => {\r\n  return {\r\n    type: CHOOSE_ITEM,\r\n    payload: choose,\r\n  };\r\n};\r\n\r\nexport const actPlayGame = () => {\r\n  return {\r\n    type: END_GAME,\r\n  };\r\n};\r\n\r\nexport const actRandom = () => {\r\n  return {\r\n    type: RANDOM_ITEM,\r\n  };\r\n};\r\n","export const CHOOSE_ITEM = \"CHOOSE_ITEM\";\r\nexport const RANDOM_ITEM = \"RANDOM_ITEM\";\r\nexport const END_GAME = \"END_GAME\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actPlayGame, actRandom } from \"../modules/constant\";\r\n\r\nclass ResultGame extends Component {\r\n  render() {\r\n    const { countGame, countWin, resultText, handlePlayGame } = this.props;\r\n    return (\r\n      <div className=\"col-4 \">\r\n        <div className=\" result__game  mt-5 result__text\">{resultText}</div>\r\n        <div className=\"text-success result__game\">\r\n          Số bàn thắng: <span className=\"text-warning\">{countWin}</span>\r\n        </div>\r\n        <div className=\"text-success result__game\">\r\n          Số bàn chơi: <span className=\"text-warning\">{countGame}</span>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-success mt-5\"\r\n          onClick={() => {\r\n            handlePlayGame();\r\n          }}\r\n        >\r\n          Play Game\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countWin: state.oanTuTiReducer.countWin,\r\n    countGame: state.oanTuTiReducer.countGame,\r\n    resultText: state.oanTuTiReducer.resultText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handlePlayGame: () => {\r\n      let count = 0;\r\n      let randomInterval = setInterval(() => {\r\n        dispatch(actRandom());\r\n        count++;\r\n        if (count > 20) {\r\n          clearInterval(randomInterval);\r\n          dispatch(actPlayGame());\r\n        }\r\n      }, 100);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultGame);\r\n","import React, { Component } from \"react\";\r\nimport IconHome from \"../../HomePage/IconHome\";\r\nimport \"./assets/index.css\";\r\nimport Computer from \"./Computer\";\r\nimport Player from \"./Player\";\r\nimport ResultGame from \"./ResultGame\";\r\n\r\nexport default class GameOanTuTi extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game__OanTuTi text-center\">\r\n          <div className=\"text-center mt-3 display-4 title_ott\" style={{color: \"#b786ce\"}}>GAME OẲN TÙ TÌ AVENGER</div>\r\n        <div className=\"row text-center text-white\">\r\n          <Player />\r\n          <ResultGame />\r\n          <Computer />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src=\"./img/bgOanTuTi.jpg\"\r\n            alt=\"./img/bgOanTuTi.jpg\"\r\n            className=\"bgAvenger\"\r\n          />\r\n        </div>\r\n        <IconHome />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homePage\">\r\n        <div className=\"container-fluid text-center\">\r\n          <div className=\"title__home\">Web Game</div>\r\n          <div className=\"row text-center\">\r\n            <div className=\"col-6\">\r\n              <Link className=\"text-white\" to=\"/game-xuc-xac\">\r\n                <img\r\n                  className=\"choose__Game\"\r\n                  src=\"./img/XucXacBgHome.jpg\"\r\n                  alt=\"xucxac\"\r\n                />\r\n                <br />\r\n\r\n                <div className=\"btn btnChooseGame\">Game Xúc Xắc</div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <Link className=\"text-white\" to=\"/game-oan-tu-ti\">\r\n                <img\r\n                  className=\"choose__Game\"\r\n                  src=\"./img/OanTuTiBgHome.png\"\r\n                  alt=\"oantuti\"\r\n                />\r\n                <br />\r\n                <div className=\"btn btnChooseGame\">Game Oẳn Tù Tì</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport GameXucXac from \"./gameXucXac/components\";\r\nimport GameOanTuTi from \"./gameOanTuTi/components\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact path=\"/game-webapp\" component={HomePage} />\r\n        <Route path=\"game-webapp/game-xuc-xac\" component={GameXucXac} />\r\n        <Route path=\"game-webapp/game-oan-tu-ti\" component={GameOanTuTi} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHOOSE_GAME, PLAY_GAME, RANDOM_XUC_XAC } from \"./constant\";\r\n\r\nconst initialState = {\r\n  countWin: 0,\r\n  countGame: 0,\r\n  clientChoose: true,\r\n  dice: [1, 1, 1],\r\n  resultGame: false,\r\n};\r\n\r\nconst xucXacReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case CHOOSE_GAME: {\r\n      state.clientChoose = actions.payload;\r\n      return { ...state };\r\n    }\r\n    case RANDOM_XUC_XAC: {\r\n      //đổ xúc xắc\r\n      state.dice = state.dice.map((item) => {\r\n        return Math.ceil(Math.random() * 6);\r\n      });\r\n      return { ...state };\r\n    }\r\n    case PLAY_GAME: {\r\n      //tính tổng xúc xắc\r\n      let result = state.dice.reduce((sum, item) => {\r\n        return (sum += item);\r\n      }, 0);\r\n\r\n      //kiểm tra kết quả\r\n      let gameResult = result > 12 ? true : false;\r\n      if (gameResult === state.clientChoose) {\r\n        state.countWin++;\r\n      }\r\n      state.resultGame = gameResult;\r\n\r\n      state.countGame++;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default xucXacReducer;\r\n","import { CHOOSE_ITEM, END_GAME, RANDOM_ITEM } from \"./actions\";\r\n\r\nconst initialState = {\r\n  countWin: 0,\r\n  countGame: 0,\r\n  resultText: \"Hòa nhau\",\r\n  chooseArr: [\r\n    { ma: \"rock\", img: \"./img/rock.png\", datCuoc: true },\r\n    { ma: \"paper\", img: \"./img/paper.png\", datCuoc: false },\r\n    { ma: \"scissors\", img: \"./img/scissors.png\", datCuoc: false },\r\n  ],\r\n  computerChoose: { ma: \"rock\", img: \"./img/rock.png\" },\r\n};\r\n\r\nconst oanTuTiReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case CHOOSE_ITEM: {\r\n      let chooseArrUpdate = [...state.chooseArr];\r\n      chooseArrUpdate = chooseArrUpdate.map((item) => {\r\n        if (item.ma === actions.payload) {\r\n          return { ...item, datCuoc: true };\r\n        }\r\n        return { ...item, datCuoc: false };\r\n      });\r\n      state.chooseArr = chooseArrUpdate;\r\n      return { ...state };\r\n    }\r\n    case RANDOM_ITEM: {\r\n      let randomNumber = Math.floor(Math.random() * 3);\r\n      let randomChoose = state.chooseArr[randomNumber];\r\n      state.computerChoose = randomChoose;\r\n      return { ...state };\r\n    }\r\n    case END_GAME: {\r\n      //tìm player đã chọn\r\n      let player = state.chooseArr.find((item) => {\r\n        return item.datCuoc === true;\r\n      });\r\n\r\n      //tạo dữ liệu xét các trường hợp\r\n      let rpsData = {\r\n        rock: { scissors: 1, rock: 0.5, paper: 0 },\r\n        paper: { rock: 1, paper: 0.5, scissors: 0 },\r\n        scissors: { paper: 1, scissors: 0.5, rock: 0 },\r\n      };\r\n\r\n      //handle result\r\n      switch (rpsData[player.ma][state.computerChoose.ma]) {\r\n        case 1:\r\n          state.resultText = \"You win, I love you pặc pặc!!\";\r\n          state.countWin++;\r\n          break;\r\n        case 0.5:\r\n          state.resultText = \"Hòa nhau\";\r\n          break;\r\n        case 0:\r\n          state.resultText = \"Bạn thua sml\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      state.countGame++;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default oanTuTiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport xucXacReducer from \"./../gameXucXac/modules/xucXacReducer\";\r\nimport oanTuTiReducer from \"./../gameOanTuTi/modules/oanTuTiReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  xucXacReducer,\r\n  oanTuTiReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../node_modules/jquery/dist/jquery.min\";\r\nimport \"./../node_modules/popper.js/dist/umd/popper.min\";\r\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.min\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./redux/index\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}